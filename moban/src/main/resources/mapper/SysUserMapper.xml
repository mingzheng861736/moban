<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mz.demo.mapper.SysUserMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.mz.demo.entity.pojo.SysUser">
        <id column="id" property="id" />
        <result column="login_name" property="loginName" />
        <result column="nick_name" property="nickName" />
        <result column="icon" property="icon" />
        <result column="password" property="password" />
        <result column="salt" property="salt" />
        <result column="tel" property="tel" />
        <result column="email" property="email" />
        <result column="locked" property="locked" />
        <result column="create_date" property="createDate" />
        <result column="create_by" property="createBy" />
        <result column="update_date" property="updateDate" />
        <result column="update_by" property="updateBy" />
        <result column="remarks" property="remarks" />
        <result column="del_flag" property="delFlag" />
        <result property="adminUser" column="is_admin"/>
        <collection property="roleLists" ofType="com.mz.demo.entity.pojo.SysRole">
            <result property="id" column="role.id"/>
            <result property="name" column="role.name"/>
        </collection>
        <collection property="menus" ofType="com.mz.demo.entity.pojo.SysMenu">
            <result property="id" column="menu.id"/>
            <result property="name" column="menu.name"/>
            <result property="href" column="menu.href"/>
            <result property="permission" column="menu.permission"/>
            <result property="bgColor" column="menu.bgColor"/>
            <result property="icon" column="menu.icon"/>
            <result property="sort" column="menu.sort"/>
        </collection>

    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, login_name, nick_name, icon, password, salt, tel, email, locked, create_date, create_by, update_date, update_by, remarks, del_flag, is_admin
    </sql>

    <select id="selectUserByMap" parameterType="java.util.Map" resultMap="BaseResultMap">
        SELECT
        u.id,
        u.login_name,
        u.nick_name,
        u.tel,
        u.email,
        u.password,
        u.salt,
        u.locked,
        u.is_admin,
        u.del_flag,
        u.icon,
        r.id AS "role.id",
        r.name AS "role.name",
        m.id AS "menu.id",
        m.name AS "menu.name",
        m.permission AS "menu.permission",
        m.href AS "menu.href",
        m.bg_color AS "menu.bgColor",
        m.icon AS "menu.icon",
        m.sort AS "menu.sort",
        u.remarks
        from
        sys_user u
        left join sys_user_role sur on sur.user_id = u.id
        left join sys_role r on r.id = sur.role_id
        left join sys_role_menu srm on srm.role_id = r.id
        left join sys_menu m on m.id = srm.menu_id
        where
        1=1
        <if test="id == null or id == ''">
            and u.del_flag = false
            and r.del_flag = false
        </if>
        <if test="loginName !=null and loginName !=''">
            and (
            u.login_name = #{loginName}
            or u.tel = #{loginName}
            or u.email = #{loginName}
            )
        </if>
        <if test="id != null and id != ''">
            and u.id = #{id}
        </if>
    </select>

    <select id="saveUserRoles">
        insert into sys_user_role(user_id,role_id)
        values
        <foreach collection="roleIds" item="item" index="index" separator=",">
            (#{userId},#{item.id})
        </foreach>
    </select>

    <delete id="dropUserRolesByUserId" parameterType="java.lang.Integer">
        delete from sys_user_role where user_id = #{userId}
    </delete>
</mapper>
